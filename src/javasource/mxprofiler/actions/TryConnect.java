// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package profiling.actions;

import com.mendix.core.Core;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.webui.CustomJavaAction;
import profiling.implementation.TCPClient;

public class TryConnect extends CustomJavaAction<java.lang.Void>
{
	private final java.lang.Long Port;
	private final java.lang.String On_Disconnect;

	public TryConnect(
		IContext context,
		java.lang.Long _port,
		java.lang.String _on_Disconnect
	)
	{
		super(context);
		this.Port = _port;
		this.On_Disconnect = _on_Disconnect;
	}

	@java.lang.Override
	public java.lang.Void executeAction() throws Exception
	{
		// BEGIN USER CODE
        TCPClient client = TCPClient.INSTANCE;

        // Set the disconnect callback
        client.setDisconnectCallback(() -> {
            Core.microflowCall(this.On_Disconnect).inTransaction(false).execute(this.getContext());
        });

        client.connect("localhost", 12345);
        if (client.isConnected()) {
        	client.sendMessage("Hello, server!");
        }
        else {
        	throw new Exception("Could not connect to server!");
        }
        return null;
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 * @return a string representation of this action
	 */
	@java.lang.Override
	public java.lang.String toString()
	{
		return "TryConnect";
	}

	// BEGIN EXTRA CODE
	// END EXTRA CODE
}
